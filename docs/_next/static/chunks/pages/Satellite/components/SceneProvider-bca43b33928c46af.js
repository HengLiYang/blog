(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[536],{1397:function(e,r,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/Satellite/components/SceneProvider",function(){return t(9363)}])},9363:function(e,r,t){"use strict";t.r(r),t.d(r,{SceneContext:function(){return l},SceneProvider:function(){return s}});var n=t(2676),o=t(5271),c=t(1521),i=t(8957),u=t(7577);let l=(0,o.createContext)({scene:null,camera:null,renderer:null,controls:null,isInitialized:!1,isRotating:!1,setIsRotating:()=>{},resourceManager:null,getEntityRegistry:()=>null,isLoaded:!1,setIsLoaded:()=>{}}),s=e=>{let{children:r,containerRef:t}=e,[s,a]=(0,o.useState)(!1),[d,p]=(0,o.useState)(!0),[g,h]=(0,o.useState)(!1),v=(0,o.useRef)(null),S=(0,o.useRef)(null),m=(0,o.useRef)(null),f=(0,o.useRef)(null),P=(0,o.useRef)(null),w=(0,o.useRef)(new Map),y=(0,o.useRef)([]),M=(0,o.useRef)(1),E=(0,o.useRef)({entities:new Map,register(e){if(this.entities.has(e.id)){console.warn("SceneProvider: 实体ID冲突，已存在ID为 ".concat(e.id," 的实体，将被替换"));let r=this.entities.get(e.id);r&&r.object.parent&&(r.object.parent.remove(r.object),r.dispose())}this.entities.set(e.id,e),console.log("SceneProvider: 注册实体 [".concat(e.type,"] ID: ").concat(e.id))},get(e){return this.entities.get(e)},getByType(e){let r=[];return this.entities.forEach(t=>{t.type===e&&r.push(t)}),r},remove(e){let r=this.entities.get(e);r&&(r.object.parent&&r.object.parent.remove(r.object),r.dispose(),this.entities.delete(e),console.log("SceneProvider: 移除实体 ID: ".concat(e)))},has(e){return this.entities.has(e)},clear(){Array.from(this.entities.keys()).forEach(e=>this.remove(e)),console.log("SceneProvider: 清空所有实体")}}),R=(0,o.useRef)(null);(0,o.useEffect)(()=>{if(!t.current){console.log("SceneProvider: 容器元素不可用，等待DOM加载");return}let e=new c.xsS;e.background=new c.Ilk(0),v.current=e;let r=t.current.clientWidth,n=t.current.clientHeight,o=r-380,l=new c.cPb(40,o/n,.1,2e3);S.current=l;let s=new i.CP7({antialias:!0});s.setSize(r,n),s.setPixelRatio(window.devicePixelRatio),s.setViewport(380,0,o,n),s.shadowMap.enabled=!0,s.shadowMap.type=c.ntZ,s.outputColorSpace=c.KI_,s.toneMapping=c.uL9,s.toneMappingExposure=1,t.current.appendChild(s.domElement),m.current=s,console.log("SceneProvider: 渲染器设置完成",{shadowMapEnabled:s.shadowMap.enabled,outputColorSpace:s.outputColorSpace,toneMapping:s.toneMapping,toneMappingExposure:s.toneMappingExposure});let d=new u.z(l,s.domElement);d.enableDamping=!0,d.dampingFactor=.05,d.minDistance=3,d.maxDistance=8,d.enablePan=!1,d.rotateSpeed=.5,d.zoomSpeed=.5,f.current=d;let p=new c.dpR;R.current={textureLoader:p,loadTexture:e=>new Promise((r,t)=>{p.load(e,t=>{m.current&&(t.anisotropy=Math.min(4,m.current.capabilities.getMaxAnisotropy())),(e.includes("Albedo")||e.includes("night_lights"))&&(t.colorSpace=c.KI_),t.generateMipmaps=!0,t.minFilter=c.D1R,t.magFilter=c.wem,r(t)},r=>{console.log("SceneProvider: 纹理加载进度: ".concat(e," - ").concat(r.loaded,"/").concat(r.total))},r=>{console.error("SceneProvider: 纹理加载失败: ".concat(e),r),t(r)})}),registerUpdateFunction:e=>{let r=M.current++;return w.current.set(r,e),console.log("SceneProvider: 已注册更新函数 ID: ".concat(r)),r},unregisterUpdateFunction:e=>{w.current.delete(e),console.log("SceneProvider: 已注销更新函数 ID: ".concat(e))},registerForCleanup:e=>{y.current.push(e),console.log("SceneProvider: 已注册清理函数")},entityRegistry:E.current};let g=()=>{if(!t.current||!m.current||!S.current)return;let e=t.current.clientWidth,r=t.current.clientHeight,n=Math.max(e-380,1);S.current.aspect=n/r,S.current.updateProjectionMatrix(),m.current.setSize(e,r),m.current.setViewport(380,0,n,r)};window.addEventListener("resize",g);let h=0,b=e=>{P.current=requestAnimationFrame(b),!(e-h<16.666666666666668)&&(h=e,f.current&&f.current.update(),w.current.forEach(r=>{r(e)}),m.current&&v.current&&S.current&&m.current.render(v.current,S.current))};return b(0),a(!0),console.log("SceneProvider: Three.js环境初始化完成"),()=>{if(console.log("SceneProvider: 开始清理Three.js资源"),window.removeEventListener("resize",g),P.current&&(cancelAnimationFrame(P.current),P.current=null,console.log("SceneProvider: 动画帧已取消")),R.current&&R.current.entityRegistry&&(console.log("SceneProvider: 清理所有注册的实体"),R.current.entityRegistry.clear()),console.log("SceneProvider: 执行 ".concat(y.current.length," 个注册的清理函数")),y.current.forEach(e=>{try{e()}catch(e){console.error("执行清理函数时出错:",e)}}),w.current.clear(),y.current=[],m.current){try{t.current&&t.current.contains(m.current.domElement)&&(t.current.removeChild(m.current.domElement),console.log("SceneProvider: 渲染器DOM元素已移除"))}catch(e){console.error("移除渲染器DOM元素时出错:",e)}m.current.dispose(),m.current.forceContextLoss(),m.current=null,console.log("SceneProvider: 渲染器已释放")}f.current&&(f.current.dispose(),f.current=null,console.log("SceneProvider: 控制器已释放")),v.current=null,S.current=null,R.current=null,console.log("SceneProvider: Three.js资源清理完成")}},[t]);let b=(0,o.useMemo)(()=>({scene:v.current,camera:S.current,renderer:m.current,controls:f.current,isInitialized:s,resourceManager:R.current,isRotating:d,setIsRotating:p,getEntityRegistry:()=>{var e;return(null===(e=R.current)||void 0===e?void 0:e.entityRegistry)||null},isLoaded:g,setIsLoaded:h}),[s,d,g]);return(0,n.jsx)(l.Provider,{value:b,children:r})};r.default=s}},function(e){e.O(0,[593,944,577,774,888,179],function(){return e(e.s=1397)}),_N_E=e.O()}]);
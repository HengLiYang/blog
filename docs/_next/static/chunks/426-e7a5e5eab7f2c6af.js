"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[426],{426:function(e,t,r){r.r(t),r.d(t,{default:function(){return h}});var n=r(5271),o=r(1521),l=r(9363);let c={DEFAULT_RADIUS:1.5,GEOMETRY_SEGMENTS:24,CLOUDS_OFFSET:.01,ATMOSPHERE_OFFSET:.1,ROTATION_SPEED:1e-5,FRAME_RATE_LIMIT:16},a={BUMP_SCALE:.1,CLOUDS_OPACITY:.4,FALLBACK_COLOR:4886754,FALLBACK_SHININESS:30},i={AMBIENT_COLOR:6316128,AMBIENT_INTENSITY:1.5,DIRECTIONAL_COLOR:16777215,DIRECTIONAL_INTENSITY:.8,ADDITIONAL_LIGHT1_COLOR:4210752,ADDITIONAL_LIGHT1_INTENSITY:.6,ADDITIONAL_LIGHT2_COLOR:4210752,ADDITIONAL_LIGHT2_INTENSITY:.4,FALLBACK_AMBIENT_INTENSITY:.6,FALLBACK_DIRECTIONAL_INTENSITY:.8},u={DIRECTIONAL_LIGHT:[0,0,5],ADDITIONAL_LIGHT1:[5,0,0],ADDITIONAL_LIGHT2:[-5,0,0],FALLBACK_DIRECTIONAL_LIGHT:[5,3,5]},s={MAP_SIZE:1024},d={X:0*Math.PI,Y:0*Math.PI,Z:0},p={ATMOSPHERE_VERTEX:"\n        varying vec3 vNormal;\n        varying vec3 eyeVector;\n        \n        void main() {\n            vec4 mvPos = modelViewMatrix * vec4(position, 1.0);\n            vNormal = normalize(normalMatrix * normal);\n            eyeVector = normalize(mvPos.xyz);\n            gl_Position = projectionMatrix * mvPos;\n        }\n    ",ATMOSPHERE_FRAGMENT:"\n        varying vec3 vNormal;\n        varying vec3 eyeVector;\n        uniform float atmOpacity;\n        uniform float atmPowFactor;\n        uniform float atmMultiplier;\n        \n        void main() {\n            float dotP = dot(vNormal, eyeVector);\n            float factor = pow(dotP, atmPowFactor) * atmMultiplier;\n            \n            vec3 atmColor = vec3(0.27 + dotP/15.0, 0.35 + dotP/15.0, 0.5 + dotP/12.0);\n            \n            gl_FragColor = vec4(atmColor, atmOpacity) * factor;\n        }\n    "},E={ALBEDO:"/textures/Albedo.jpg",NIGHT_LIGHTS:"/textures/night_lights.png",BUMP:"/textures/Bump.jpg",CLOUDS:"/textures/Clouds.png"};var h=e=>{let{worldRadius:t=c.DEFAULT_RADIUS,isRotating:r=!0,rotationAxis:h=new o.Pa4(0,1,0),selectedSatellite:I=null}=e,{scene:g,camera:T,renderer:m,resourceManager:S,isLoaded:L,setIsLoaded:A}=(0,n.useContext)(l.SceneContext),[O,M]=(0,n.useState)(0),[_,N]=(0,n.useState)(null),[v,R]=(0,n.useState)(!1),w=(0,n.useRef)({group:null,earth:null,clouds:null,atmosphere:null,lights:{ambient:null,directional:null,additionalLights:[]},geometry:null,materials:{earth:null,clouds:null,atmosphere:null},textures:{dayMap:null,nightMap:null,bumpMap:null,specularMap:null,cloudsMap:null},worldRadius:t,updateFunctionId:null}),P=(0,n.useMemo)(()=>({atmOpacity:.4,atmPowFactor:4.1,atmMultiplier:9.5}),[]),C=(0,n.useMemo)(()=>h,[h.x,h.y,h.z]);return(0,n.useEffect)(()=>{w.current.group&&(I?(w.current.group.visible=!1,console.log("Earth: 隐藏地球模型")):(w.current.group.visible=!0,console.log("Earth: 显示地球模型")))},[I]),(0,n.useEffect)(()=>{if(!g||!T||!m||!S){console.log("Earth: 场景、相机、渲染器或资源管理器不可用");return}N(null),M(0),R(!0),A(!1),console.log("Earth: 开始加载地球模型");let e=new o.ZAu;e.name="earth-group",e.rotation.set(d.X,d.Y,d.Z),g.add(e),w.current.group=e,e.position.set(0,0,0);let r=new o.xo$(t,c.GEOMETRY_SEGMENTS,c.GEOMETRY_SEGMENTS);return w.current.geometry=r,(async()=>{try{console.log("Earth: 开始加载纹理文件");let n=0,l=()=>{let e=++n/5*100;M(e),console.log("Earth: 纹理加载进度 ".concat(e.toFixed(1),"%"))},d=(e,t)=>Promise.race([S.loadTexture(e),new Promise((r,n)=>setTimeout(()=>n(Error("纹理加载超时: ".concat(e))),t))]);console.log("Earth: 开始加载纹理文件，路径:",{ALBEDO:E.ALBEDO,NIGHT_LIGHTS:E.NIGHT_LIGHTS,BUMP:E.BUMP,CLOUDS:E.CLOUDS});let h=[d(E.ALBEDO,3e4).then(e=>(l(),e)).catch(e=>(console.error("Earth: Albedo纹理加载失败，使用备用方案",e),null)),d(E.NIGHT_LIGHTS,3e4).then(e=>(l(),e)).catch(e=>(console.error("Earth: Night lights纹理加载失败，使用备用方案",e),null)),d(E.BUMP,3e4).then(e=>(l(),e)).catch(e=>(console.error("Earth: Bump纹理加载失败，使用备用方案",e),null)),d("/textures/Ocean.png",3e4).then(e=>(l(),e)).catch(e=>(console.error("Earth: Ocean纹理加载失败，使用备用方案",e),null)),d(E.CLOUDS,3e4).then(e=>(l(),e)).catch(e=>(console.error("Earth: Clouds纹理加载失败，使用备用方案",e),null))],[I,g,T,m,L]=await Promise.all(h);console.log("Earth: 纹理加载完成"),I&&g&&T&&m&&L||console.warn("Earth: 部分纹理加载失败，使用简化版本"),I&&(I.wrapS=o.uWy,I.wrapT=o.uWy,I.colorSpace=o.KI_),T&&(T.wrapS=o.uWy,T.wrapT=o.uWy,T.colorSpace=o.aCh),m&&(m.wrapS=o.uWy,m.wrapT=o.uWy,m.colorSpace=o.aCh);let O=new o.xoR({map:I||void 0,bumpMap:T||void 0,bumpScale:T?a.BUMP_SCALE:0,specularMap:m||void 0,specular:new o.Ilk(2254506),shininess:25,emissive:new o.Ilk(16755712),emissiveMap:g||void 0,emissiveIntensity:g?3.5:0,color:I?new o.Ilk(15792383):a.FALLBACK_COLOR}),_=null;L&&(_=new o.xoR({map:L,transparent:!0,opacity:a.CLOUDS_OPACITY}));let N=new o.jyz({vertexShader:p.ATMOSPHERE_VERTEX,fragmentShader:p.ATMOSPHERE_FRAGMENT,uniforms:{atmOpacity:{value:P.atmOpacity},atmPowFactor:{value:P.atmPowFactor},atmMultiplier:{value:P.atmMultiplier}},transparent:!0,side:o._Li}),v=new o.Kj0(r,O);if(v.name="earth-mesh",v.renderOrder=1,e.add(v),w.current.earth=v,_){let r=new o.xo$(t+c.CLOUDS_OFFSET,c.GEOMETRY_SEGMENTS,c.GEOMETRY_SEGMENTS),n=new o.Kj0(r,_);n.name="clouds-mesh",e.add(n),w.current.clouds=n}let C=new o.xo$(t+c.ATMOSPHERE_OFFSET,c.GEOMETRY_SEGMENTS,c.GEOMETRY_SEGMENTS),D=new o.Kj0(C,N);D.name="atmosphere-mesh",e.add(D),w.current.atmosphere=D,w.current.materials.earth=O,w.current.materials.clouds=_,w.current.materials.atmosphere=N,w.current.textures.dayMap=I,w.current.textures.nightMap=g,w.current.textures.bumpMap=T,w.current.textures.specularMap=m,w.current.textures.cloudsMap=L;let f=new o.Mig(i.AMBIENT_COLOR,i.AMBIENT_INTENSITY);e.add(f),w.current.lights.ambient=f;let x=new o.Mig(4210752,.4);e.add(x),w.current.lights.additionalLights.push(x);let y=new o.Ox3(i.DIRECTIONAL_COLOR,i.DIRECTIONAL_INTENSITY);y.position.set(...u.DIRECTIONAL_LIGHT),y.castShadow=!0,y.shadow.mapSize.width=s.MAP_SIZE,y.shadow.mapSize.height=s.MAP_SIZE,e.add(y),w.current.lights.directional=y;let F=new o.Ox3(i.ADDITIONAL_LIGHT1_COLOR,i.ADDITIONAL_LIGHT1_INTENSITY);F.position.set(...u.ADDITIONAL_LIGHT1),e.add(F),w.current.lights.additionalLights.push(F);let G=new o.Ox3(i.ADDITIONAL_LIGHT2_COLOR,i.ADDITIONAL_LIGHT2_INTENSITY);G.position.set(...u.ADDITIONAL_LIGHT2),e.add(G),w.current.lights.additionalLights.push(G);let b=new o.cek(16777215,.5,10);b.position.set(0,0,3),e.add(b),w.current.lights.additionalLights.push(b),R(!1),A(!0),M(100),console.log("Earth: 地球模型加载完成")}catch(s){console.error("Earth: 纹理加载失败，使用备用方案",s),N(s instanceof Error?s.message:"未知错误");let t=new o.xoR({color:a.FALLBACK_COLOR,shininess:a.FALLBACK_SHININESS}),n=new o.Kj0(r,t);n.name="earth-mesh-fallback",e.add(n),w.current.earth=n,w.current.materials.earth=t;let l=new o.Mig(i.AMBIENT_COLOR,i.FALLBACK_AMBIENT_INTENSITY);e.add(l),w.current.lights.ambient=l;let c=new o.Ox3(i.DIRECTIONAL_COLOR,i.FALLBACK_DIRECTIONAL_INTENSITY);c.position.set(...u.FALLBACK_DIRECTIONAL_LIGHT),e.add(c),w.current.lights.directional=c,R(!1),A(!0),M(100),console.log("Earth: 备用地球创建完成")}})(),()=>{R(!1),M(0),N(null)}},[g,T,m,S,t,P]),(0,n.useEffect)(()=>{w.current.group&&(console.log("Earth: 设置地球位置"),w.current.group.position.set(0,0,0),w.current.group.scale.set(1,1,1),w.current.group.name="earth-group")},[w.current.group]),(0,n.useEffect)(()=>{if(!r||!w.current.group||!S)return;let e=0,t=S.registerUpdateFunction(t=>{0===e&&(e=t);let r=t-e;if(e=t,!(r<c.FRAME_RATE_LIMIT)&&w.current.group){let e=c.ROTATION_SPEED*r;w.current.group.rotateOnAxis(C,e)}});return w.current.updateFunctionId=t,()=>{null!==w.current.updateFunctionId&&S&&(S.unregisterUpdateFunction(w.current.updateFunctionId),w.current.updateFunctionId=null)}},[r,C,S]),null}},9363:function(e,t,r){r.r(t),r.d(t,{SceneContext:function(){return i},SceneProvider:function(){return u}});var n=r(2676),o=r(5271),l=r(1521),c=r(8957),a=r(7577);let i=(0,o.createContext)({scene:null,camera:null,renderer:null,controls:null,isInitialized:!1,isRotating:!1,setIsRotating:()=>{},resourceManager:null,getEntityRegistry:()=>null,isLoaded:!1,setIsLoaded:()=>{}}),u=e=>{let{children:t,containerRef:r}=e,[u,s]=(0,o.useState)(!1),[d,p]=(0,o.useState)(!0),[E,h]=(0,o.useState)(!1),[I,g]=(0,o.useState)(null),T=(0,o.useRef)(null),m=(0,o.useRef)(null),S=(0,o.useRef)(null),L=(0,o.useRef)(null),A=(0,o.useRef)(null),O=(0,o.useRef)(new Map),M=(0,o.useRef)([]),_=(0,o.useRef)(1),N=(0,o.useRef)({entities:new Map,register(e){if(this.entities.has(e.id)){console.warn("SceneProvider: 实体ID冲突，已存在ID为 ".concat(e.id," 的实体，将被替换"));let t=this.entities.get(e.id);t&&t.object.parent&&(t.object.parent.remove(t.object),t.dispose())}this.entities.set(e.id,e),console.log("SceneProvider: 注册实体 [".concat(e.type,"] ID: ").concat(e.id))},get(e){return this.entities.get(e)},getByType(e){let t=[];return this.entities.forEach(r=>{r.type===e&&t.push(r)}),t},remove(e){let t=this.entities.get(e);t&&(t.object.parent&&t.object.parent.remove(t.object),t.dispose(),this.entities.delete(e),console.log("SceneProvider: 移除实体 ID: ".concat(e)))},has(e){return this.entities.has(e)},clear(){Array.from(this.entities.keys()).forEach(e=>this.remove(e)),console.log("SceneProvider: 清空所有实体")}}),v=(0,o.useRef)(null),R=(0,o.useCallback)(()=>{if(!r.current||!S.current||!m.current)return;let e=r.current.clientWidth,t=r.current.clientHeight,n=Math.max(e-380,1);m.current.aspect=n/t,m.current.updateProjectionMatrix(),S.current.setSize(e,t),S.current.setViewport(380,0,n,t)},[r]);(0,o.useEffect)(()=>{try{if(!r.current){console.log("SceneProvider: 容器元素不可用，等待DOM加载");return}let e=document.createElement("canvas");if(!(e.getContext("webgl")||e.getContext("experimental-webgl"))){let e="WebGL不受支持，无法初始化3D场景";console.error(e),g(e);return}let t=new l.xsS;t.background=new l.Ilk(0),T.current=t;let n=r.current.clientWidth,o=r.current.clientHeight,i=Math.max(n-380,1),u=new l.cPb(40,i/o,.1,2e3);m.current=u;let d=new c.CP7({antialias:!0,powerPreference:"high-performance",stencil:!1,depth:!0,alpha:!1});d.setSize(n,o),d.setPixelRatio(Math.min(window.devicePixelRatio,2)),d.setViewport(380,0,i,o),d.shadowMap.enabled=!0,d.shadowMap.type=l.ntZ,d.outputColorSpace=l.KI_,d.toneMapping=l.uL9,d.toneMappingExposure=1,d.info.autoReset=!1,r.current.appendChild(d.domElement),S.current=d,console.log("SceneProvider: 渲染器设置完成",{shadowMapEnabled:d.shadowMap.enabled,outputColorSpace:d.outputColorSpace,toneMapping:d.toneMapping,toneMappingExposure:d.toneMappingExposure,pixelRatio:d.getPixelRatio()});let p=new a.z(u,d.domElement);p.enableDamping=!0,p.dampingFactor=.05,p.minDistance=3,p.maxDistance=8,p.enablePan=!1,p.rotateSpeed=.5,p.zoomSpeed=.5,L.current=p;let E=new l.dpR;v.current={textureLoader:E,loadTexture:e=>new Promise((t,r)=>{let n=0,o=()=>{E.load(e,r=>{S.current&&(r.anisotropy=Math.min(4,S.current.capabilities.getMaxAnisotropy())),(e.includes("Albedo")||e.includes("night_lights"))&&(r.colorSpace=l.KI_),r.generateMipmaps=!0,r.minFilter=l.D1R,r.magFilter=l.wem,t(r)},t=>{console.log("SceneProvider: 纹理加载进度: ".concat(e," - ").concat(t.loaded,"/").concat(t.total))},t=>{console.error("SceneProvider: 纹理加载失败: ".concat(e),t),n<3?(n++,console.log("SceneProvider: 重试加载纹理 ".concat(e," (").concat(n,"/").concat(3,")")),setTimeout(o,1e3*n)):r(t)})};o()}),registerUpdateFunction:e=>{let t=_.current++;return O.current.set(t,e),console.log("SceneProvider: 已注册更新函数 ID: ".concat(t)),t},unregisterUpdateFunction:e=>{O.current.delete(e),console.log("SceneProvider: 已注销更新函数 ID: ".concat(e))},registerForCleanup:e=>{M.current.push(e),console.log("SceneProvider: 已注册清理函数")},entityRegistry:N.current},window.addEventListener("resize",R);let h=0,I=0,w=0,P=e=>{if(A.current=requestAnimationFrame(P),!(e-h<16.666666666666668)){if(h=e,I++,e-w>=1e3){let t=Math.round(1e3*I/(e-w));t<30&&console.warn("SceneProvider: 低帧率警告 - ".concat(t," FPS")),I=0,w=e}L.current&&L.current.update(),O.current.forEach(t=>{try{t(e)}catch(e){console.error("SceneProvider: 更新函数执行错误",e)}}),S.current&&T.current&&m.current&&S.current.render(T.current,m.current)}};P(0),s(!0),g(null),console.log("SceneProvider: Three.js环境初始化完成")}catch(t){let e=t instanceof Error?t.message:"初始化失败";console.error("SceneProvider: 初始化错误",t),g(e)}return()=>{if(console.log("SceneProvider: 开始清理Three.js资源"),window.removeEventListener("resize",R),A.current&&(cancelAnimationFrame(A.current),A.current=null,console.log("SceneProvider: 动画帧已取消")),v.current&&v.current.entityRegistry&&(console.log("SceneProvider: 清理所有注册的实体"),v.current.entityRegistry.clear()),console.log("SceneProvider: 执行 ".concat(M.current.length," 个注册的清理函数")),M.current.forEach(e=>{try{e()}catch(e){console.error("执行清理函数时出错:",e)}}),O.current.clear(),M.current=[],S.current){try{r.current&&r.current.contains(S.current.domElement)&&(r.current.removeChild(S.current.domElement),console.log("SceneProvider: 渲染器DOM元素已移除"))}catch(e){console.error("移除渲染器DOM元素时出错:",e)}S.current.dispose(),S.current.forceContextLoss(),S.current=null,console.log("SceneProvider: 渲染器已释放")}L.current&&(L.current.dispose(),L.current=null,console.log("SceneProvider: 控制器已释放")),T.current=null,m.current=null,v.current=null,console.log("SceneProvider: Three.js资源清理完成")}},[r]);let w=(0,o.useMemo)(()=>({scene:T.current,camera:m.current,renderer:S.current,controls:L.current,isInitialized:u,resourceManager:v.current,isRotating:d,setIsRotating:p,getEntityRegistry:()=>{var e;return(null===(e=v.current)||void 0===e?void 0:e.entityRegistry)||null},isLoaded:E,setIsLoaded:h}),[u,d,E]);return I?(0,n.jsx)("div",{className:"error-container",children:(0,n.jsxs)("div",{className:"error-message",children:[(0,n.jsx)("h3",{children:"初始化失败"}),(0,n.jsx)("p",{children:I}),(0,n.jsx)("button",{onClick:()=>window.location.reload(),children:"重新加载"})]})}):(0,n.jsx)(i.Provider,{value:w,children:t})};t.default=u}}]);